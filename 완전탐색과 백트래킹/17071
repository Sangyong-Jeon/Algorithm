#include <bits/stdc++.h>
using namespace std;
const int max_n = 500000;
int visited[2][max_n + 4], n, k, ok, turn = 1;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin >> n >> k;
    if (n == k) // 수빈이와 동생 거리가 같을 때
    {
        cout << 0 << "\n";
        return 0;
    }
    queue<int> q;
    visited[0][n] = 1;
    q.push(n);
    while (q.size())
    {
        k += turn;     // 동생은 매 초마다 이동
        if (k > max_n) // 동생이 50만 넘으면 멈추기
            break;
        if (visited[turn % 2][k]) // 동생위치 방문했으면 멈추기
        {
            ok = true;
            break;
        }
        int qSize = q.size();
        for (int i = 0; i < qSize; i++)
        {
            int x = q.front();
            q.pop();
            for (int nx : {x + 1, x - 1, x * 2})
            {
                if (nx < 0 || nx > max_n || visited[turn % 2][nx]) // 범위 넘었거나 방문했으면 넘기기
                    continue;
                visited[turn % 2][nx] = visited[(turn + 1) % 2][x] + 1;
                if (nx == k) // 수빈이가 이동한 위치(nx)가 동생위치와 똑같으면 멈추기
                {
                    ok = true;
                    break;
                }
                q.push(nx);
            }
            if (ok)
                break;
        }
        if (ok)
            break;
        turn++; // 동생의 이동거리는 가속이 붙음
    }
    if (ok)
        cout << turn << "\n";
    else
        cout << -1 << "\n";
    return 0;
}