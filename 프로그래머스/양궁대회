#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n, vector<int> info)
{
    vector<int> answer(11);
    vector<int> temp(11);
    int maxDiff = 0;

    // 2진수로 표현할 것이기 때문에, 1111111111까지 반복
    for (int subset = 1; subset < (1 << 10); subset++)
    {
        int ryan = 0, apeach = 0, cnt = 0;
        // 1111111111의 길이인 10번만큼 반복하여 하나씩 비교함
        for (int i = 0; i < 10; i++)
        {
            // subset이 1이면 라이언이 이겨야할 때
            if (subset & (1 << i))
            {
                ryan += 10 - i;
                temp[i] = info[i] + 1;
                cnt += temp[i];
            }
            // subset이 0일 때는 어피치가 이길 때
            else
            {
                temp[i] = 0;
                if (info[i] > 0)
                    apeach += 10 - i;
            }
        }
        // 라이언이 화살을 n개보다 더 쐈으면 못이기는 경우이므로 넘김
        if (cnt > n)
            continue;
        // 0점에다가 남은 화살 넣기
        temp[10] = n - cnt;

        // 라이언이 우승할 수 있는 방법이 여러가지 일 경우, 가장 낮은 점수를 더 맞힌 경우로 바꾸기
        if (ryan - apeach == maxDiff)
        {
            // 제일 낮은 점수부터 비교
            for (int i = 10; i >= 0; i--)
            {
                // 낮은 점수가 temp가 더 많다면 temp를 answer로 바꾸기
                if (temp[i] > answer[i])
                {
                    maxDiff = ryan - apeach;
                    answer = temp;
                    break;
                }
                // 낮은 점수가 answer가 많다면 비교 끝내기
                else if (temp[i] < answer[i])
                    break;
            }
        }
        // 라이언이 이기는 경우
        else if (ryan - apeach > maxDiff)
        {
            maxDiff = ryan - apeach;
            answer = temp;
        }
    }
    // 못이기는 경우
    if (maxDiff == 0)
        return {-1};
    return answer;
}