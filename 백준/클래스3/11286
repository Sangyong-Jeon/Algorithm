#include <bits/stdc++.h>
using namespace std;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;
    int n, x;
    cin >> n;
    while (n--)
    {
        cin >> x;
        if (x == 0)
        {
            if (pq.empty())
                cout << "0\n";
            else
            {
                cout << pq.top().second << '\n';
                pq.pop();
            }
        }
        else
            pq.push({abs(x), x});
    }
    return 0;
}
/* 비교연산자 구현해서 커스텀 정렬
#include <bits/stdc++.h>
using namespace std;
struct comp
{
    bool operator()(int a, int b)
    {
        if (abs(a) == abs(b))
            return a > b;
        return abs(a) > abs(b);
    }
};
int main()
{
    priority_queue<int, vector<int>, comp> pq;
    int n, x;
    cin >> n;
    while (n--)
    {
        cin >> x;
        if (x == 0)
        {
            if (pq.empty())
            {
                cout << "0\n";
            }
            else
            {
                cout << pq.top() << '\n';
                pq.pop();
            }
        }
        else
        {
            pq.push(x);
        }
    }
    return 0;
}
*/
/*
priority queue는 우선순위 큐이다.
- 내림차순 정렬 기능이 기본값인 큐
- 오름차순으로 하려면 priority_queue<int, vector<int>, greater<int>> 로 선언
- 내림차순은 위 코드에서 greater<int>를 less<int>로 바꿔주면 됨
*/