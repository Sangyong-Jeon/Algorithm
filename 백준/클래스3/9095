#include <bits/stdc++.h>
using namespace std;
int a[12] = {0, 1, 2, 4};
int main()
{
    int t, n, i;
    cin >> t;
    for (i = 4; i <= 11; i++)
        a[i] = a[i - 1] + a[i - 2] + a[i - 3];
    while (t--)
    {
        cin >> n;
        cout << a[n] << '\n';
    }
    return 0;
}
/*
1 = {1} = 1개
2 = {1+1} , {2} = 2개
3 = {1+1+1} , {1+2} , {2+1} , {3} = 4개
4 = {1+1+1+1} , {1+1+2} , {1+2+1} , {1+3} , {2+1+1} , {2+2} , {3+1} = 7개

4는 3+1 , 2+2 , 1+3 으로 만들 수 있다.
따라서 3의 개수 , 2의 개수 , 1의 개수를 더하면 4의 개수를 구할 수 있다.

4의 경우의 수를 보자.
3의 경우수에 +1을 한것과 동일하다.
그 후 2의 경우수에 +2를 한것과 동일하다.
그 후 1의 경우수에 +3을 한것과 동일하다.

dp[n] = dp[n-1] + dp[n-2] + dp[n-3] 공식이 세워진다.
*/