#include <bits/stdc++.h>
using namespace std;
int num[310], a[310], b[310];
int main()
{
    int n;
    cin >> n;
    for (int i = 2; i < n + 2; i++)
        cin >> num[i];
    for (int i = 2; i < n + 2; i++)
    {
        a[i] = max(a[i - 2] + num[i], b[i - 2] + num[i]); // 앞 계단을 밟지 않은 경우
        b[i] = a[i - 1] + num[i];                         // 앞 계단을 밟는 경우
    }
    cout << max(a[n + 1], b[n + 1]) << '\n';
    return 0;
}

/*
연속된 세 개의 계단을 밟을 수 없다.
- a : 앞 계단을 밟지 않은 경우
- b : 앞 계단을 밟는 경우
두 가지로 나눌 수 있다.

a의 경우, 앞 계단을 밟지 않았으므로 (현재위치-2)의 값 + 현재계단값을 더한 값을 찾는다.
이 때 (현재위치-2)의 계단을 밟기전에 앞계단에서 왔는지는 중요치않다. 따라서 a[]와 b[]의 값 중 큰 값을 선택하게 된다.

b의 경우, 연속해서 세 개의 계단을 밟을 수 없으므로, a[]에서만 밟을 수 있다.
따라서 a[현재위치-1]+현재계단값을 b[현재위치]에 넣게된다.

(현재위치-2) 때문에 배열[0]과 배열[1]의 값은 0으로 초기화해놓고 2부터 시작하게 된다.
*/